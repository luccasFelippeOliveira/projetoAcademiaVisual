/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DataBase.Exercicios;
import academiavisual.FormPrincipal;
import javax.persistence.Query;
import javax.swing.JOptionPane;

/**
 *
 * @author afnsoo
 */
public class JInternalFrameCadastroExercicio extends javax.swing.JInternalFrame {

    /**
     * Creates new form JInternalFrameCadastroExercicio
     */
    public JInternalFrameCadastroExercicio() {
        initComponents();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManagerExercicios = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("AcademiaVisualPU").createEntityManager();
        exerciciosQuery = java.beans.Beans.isDesignTime() ? null : entityManagerExercicios.createQuery("SELECT e FROM Exercicios e");
        exerciciosList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : exerciciosQuery.getResultList();
        jButtonExcluirExercicios = new javax.swing.JButton();
        jButtonFecharExercicios = new javax.swing.JButton();
        jTabbedPaneExercicios = new javax.swing.JTabbedPane();
        jPanelConsultaExercicios = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableExercicios = new javax.swing.JTable();
        jLabelProcurarExercicios = new javax.swing.JLabel();
        jTextFieldProcurarExercicios = new javax.swing.JTextField();
        jComboBoxProcurarExercicios = new javax.swing.JComboBox();
        jButtonProcurarExercicios = new javax.swing.JButton();
        jPanelAlterarExercicios = new javax.swing.JPanel();
        jLabelExerciciosNome = new javax.swing.JLabel();
        jTextFieldExerciciosNome = new javax.swing.JTextField();
        jLabelDescricaoExercicios = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaDescricaoExercicios = new javax.swing.JTextArea();
        jButtonCancelarExercicios = new javax.swing.JButton();
        jButtonConfirmarExercicios = new javax.swing.JButton();
        jButtonInserirExercicios = new javax.swing.JButton();
        jButtonAlterarExercicios = new javax.swing.JButton();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jButtonExcluirExercicios.setText("Excluir");
        jButtonExcluirExercicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirExerciciosActionPerformed(evt);
            }
        });

        jButtonFecharExercicios.setText("Fechar");
        jButtonFecharExercicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharExerciciosActionPerformed(evt);
            }
        });

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, exerciciosList, jTableExercicios);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nome}"));
        columnBinding.setColumnName("Nome");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(jTableExercicios);

        jLabelProcurarExercicios.setText("Opção De Busca");

        jTextFieldProcurarExercicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldProcurarExerciciosActionPerformed(evt);
            }
        });

        jComboBoxProcurarExercicios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Id", "Nome" }));

        jButtonProcurarExercicios.setText("Buscar");
        jButtonProcurarExercicios.setMaximumSize(new java.awt.Dimension(75, 23));
        jButtonProcurarExercicios.setMinimumSize(new java.awt.Dimension(75, 23));
        jButtonProcurarExercicios.setPreferredSize(new java.awt.Dimension(75, 23));

        javax.swing.GroupLayout jPanelConsultaExerciciosLayout = new javax.swing.GroupLayout(jPanelConsultaExercicios);
        jPanelConsultaExercicios.setLayout(jPanelConsultaExerciciosLayout);
        jPanelConsultaExerciciosLayout.setHorizontalGroup(
            jPanelConsultaExerciciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
            .addGroup(jPanelConsultaExerciciosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelProcurarExercicios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxProcurarExercicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldProcurarExercicios, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonProcurarExercicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelConsultaExerciciosLayout.setVerticalGroup(
            jPanelConsultaExerciciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConsultaExerciciosLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanelConsultaExerciciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelProcurarExercicios)
                    .addComponent(jTextFieldProcurarExercicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonProcurarExercicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxProcurarExercicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPaneExercicios.addTab("Consulta", jPanelConsultaExercicios);

        jLabelExerciciosNome.setText("Nome:");

        jLabelDescricaoExercicios.setText("Descrição:");

        jTextAreaDescricaoExercicios.setColumns(20);
        jTextAreaDescricaoExercicios.setRows(5);
        jScrollPane2.setViewportView(jTextAreaDescricaoExercicios);

        javax.swing.GroupLayout jPanelAlterarExerciciosLayout = new javax.swing.GroupLayout(jPanelAlterarExercicios);
        jPanelAlterarExercicios.setLayout(jPanelAlterarExerciciosLayout);
        jPanelAlterarExerciciosLayout.setHorizontalGroup(
            jPanelAlterarExerciciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlterarExerciciosLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanelAlterarExerciciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDescricaoExercicios)
                    .addComponent(jLabelExerciciosNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelAlterarExerciciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .addComponent(jTextFieldExerciciosNome))
                .addContainerGap(242, Short.MAX_VALUE))
        );
        jPanelAlterarExerciciosLayout.setVerticalGroup(
            jPanelAlterarExerciciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlterarExerciciosLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanelAlterarExerciciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelExerciciosNome)
                    .addComponent(jTextFieldExerciciosNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelAlterarExerciciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDescricaoExercicios)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(131, Short.MAX_VALUE))
        );

        jTabbedPaneExercicios.addTab("Alterar", jPanelAlterarExercicios);

        jButtonCancelarExercicios.setText("Cancelar");
        jButtonCancelarExercicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarExerciciosActionPerformed(evt);
            }
        });

        jButtonConfirmarExercicios.setText("Confirmar");
        jButtonConfirmarExercicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarExerciciosActionPerformed(evt);
            }
        });

        jButtonInserirExercicios.setText("Inserir");
        jButtonInserirExercicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInserirExerciciosActionPerformed(evt);
            }
        });

        jButtonAlterarExercicios.setText("Alterar");
        jButtonAlterarExercicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarExerciciosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneExercicios)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonInserirExercicios)
                .addGap(18, 18, 18)
                .addComponent(jButtonAlterarExercicios)
                .addGap(18, 18, 18)
                .addComponent(jButtonExcluirExercicios)
                .addGap(18, 18, 18)
                .addComponent(jButtonConfirmarExercicios)
                .addGap(18, 18, 18)
                .addComponent(jButtonCancelarExercicios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonFecharExercicios)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPaneExercicios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonInserirExercicios)
                    .addComponent(jButtonAlterarExercicios)
                    .addComponent(jButtonExcluirExercicios)
                    .addComponent(jButtonFecharExercicios)
                    .addComponent(jButtonCancelarExercicios)
                    .addComponent(jButtonConfirmarExercicios))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void popularCampos(Exercicios e) {
        if(e == null) {
           jTextFieldExerciciosNome.setText("");
           jTextAreaDescricaoExercicios.setText("");
        }else {
            jTextFieldExerciciosNome.setText(e.getNome());
            jTextAreaDescricaoExercicios.setText(e.getDescricao());
        }
    }
    
    private void popularObjeto(Exercicios e) {
        e.setNome(jTextFieldExerciciosNome.getText());
        e.setDescricao(jTextAreaDescricaoExercicios.getText());
    }
    
    /**
     * Entra na Aba de Consulta
     */
    private void abaConsulta() {
        jTabbedPaneExercicios.setSelectedIndex(0);
        jTabbedPaneExercicios.setEnabledAt(0, true);
        jTabbedPaneExercicios.setEnabledAt(1, false);
        jButtonConfirmarExercicios.setEnabled(false);
        jButtonCancelarExercicios.setEnabled(false);
        jButtonInserirExercicios.setEnabled(true);
        jButtonAlterarExercicios.setEnabled(true);
        jButtonExcluirExercicios.setEnabled(true);
    }

    /**
     * Entra na Aba de Alterar
     */
    private void abaAlterar() {
        jTabbedPaneExercicios.setSelectedIndex(1);
        jTabbedPaneExercicios.setEnabledAt(1, true);
        jTabbedPaneExercicios.setEnabledAt(0, false);
        jButtonInserirExercicios.setEnabled(false);
        jButtonAlterarExercicios.setEnabled(false);
        jButtonExcluirExercicios.setEnabled(false);
        jButtonConfirmarExercicios.setEnabled(true);
        jButtonCancelarExercicios.setEnabled(true);

    }
    private boolean validacaoDeCampos() {
       boolean valido = true;
       String msgErro = "";
       String campo;
       
       campo = jTextFieldExerciciosNome.getText();
       if("".equals(campo) || (campo.length() > 40)) {
           valido = false;
           msgErro += "Nome inválido. O campo prescisa ser não nulo e menor que 40 caracteres";
       }
       
       if(!valido) {
           JOptionPane.showMessageDialog(null, msgErro, "Campos Errados!", JOptionPane.ERROR_MESSAGE);
       }
       return valido;
    }
    
    private void jButtonFecharExerciciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharExerciciosActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonFecharExerciciosActionPerformed

    private void jTextFieldProcurarExerciciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldProcurarExerciciosActionPerformed
        try {
            Query query = null;
            if(jTextFieldProcurarExercicios.getText().length() > 0) {
                if(jComboBoxProcurarExercicios.getSelectedIndex() == 0) {
                    query = entityManagerExercicios.createNamedQuery("Exercicios.findById");
                    query.setParameter("id", Long.valueOf(jTextFieldProcurarExercicios.getText()));
                }
                if(jComboBoxProcurarExercicios.getSelectedIndex() == 1) {
                    query = entityManagerExercicios.createNamedQuery("Exercicios.findByNome");
                    query.setParameter("nome", jTextFieldProcurarExercicios.getText());
                }
            } else {
                query = exerciciosQuery;
            }
            exerciciosList.clear();
            exerciciosList.addAll(query.getResultList());
            jTableExercicios.repaint();
        }catch(Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_jTextFieldProcurarExerciciosActionPerformed

    private void jButtonInserirExerciciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInserirExerciciosActionPerformed
        flagAnterior = INSERIR;
        popularCampos(null);
        abaAlterar();
    }//GEN-LAST:event_jButtonInserirExerciciosActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        if(TelaInicial.verificarAdministrador()){
            jButtonInserirExercicios.setEnabled(false);
            jButtonAlterarExercicios.setEnabled(false);
            jButtonExcluirExercicios.setEnabled(false);            
        }
    }//GEN-LAST:event_formInternalFrameOpened

    private void jButtonAlterarExerciciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarExerciciosActionPerformed
        if (!exerciciosList.isEmpty() && jTableExercicios.getSelectedRow() != -1) {
            flagAnterior = ALTERAR;
            exerciciosAlterar = exerciciosList.get(jTableExercicios.getSelectedRow());
            popularCampos(exerciciosAlterar);
            abaAlterar();
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um exercicio !");
        }
     
    }//GEN-LAST:event_jButtonAlterarExerciciosActionPerformed

    private void jButtonExcluirExerciciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirExerciciosActionPerformed
        if (!exerciciosList.isEmpty() && jTableExercicios.getSelectedRow() != -1) {
            int option = JOptionPane.showConfirmDialog(this, "Verifique com atenção os dados que deseja excluir!\n"
                    + "Clique em sim se esse for mesmo o aluno que deseja excluir.\n"
                    + "Clique em cancelar para voltar.");
            if (option == JOptionPane.YES_OPTION) {
                try {
                    /*
                     EXCLUIR O USUARIO DE TODOS AS TABELAS QUE UTILIZAM O MESMO !
                     Acho que não é necessário -- Luccas.
                     */
                    exerciciosList.get(jTableExercicios.getSelectedRow()).excluir();
                    exerciciosList.remove(jTableExercicios.getSelectedRow());
                    jTableExercicios.updateUI();
                    jTableExercicios.repaint();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Exclusão cancelada !");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um exercicios !");
        }
    }//GEN-LAST:event_jButtonExcluirExerciciosActionPerformed

    private void jButtonConfirmarExerciciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarExerciciosActionPerformed
        boolean atualizacaoFeita = false; /*Indica que a atualização/inserção foi feita com sucesso,
         mantendo a aba de alteração focada.
         */

        if (flagAnterior == INSERIR) {
            //Verifica se os campos estão corretos antes de modificá-los.
            if (validacaoDeCampos()) {
                exercicios = new Exercicios(); //Cria um aluno vazio
                popularObjeto(exercicios); //Popula o objeto
                //Insere o objeto no banco de dados
                exercicios.incluir();
                /*Coisas do bind: Para adicionar elemento por ultimo na tabela inserir na penultima posição
                 tipo: list.size() - 1 -> Não faz sentido, mas é assim que o bind funciona...
                 */
                //TODO: Consertar o bug que dá quando são feitas as primeiras inserções.(primeira e segunda apenas TRATAR ESSES CASOS).
                exerciciosList.add(exerciciosList.size() - 1, exercicios);
                jTableExercicios.repaint();
                atualizacaoFeita = true;
            }
        }
        if (flagAnterior == ALTERAR) {
            //Verifica se os campos estão corretos para atualizá-los
            if (validacaoDeCampos()) {
                popularObjeto(exerciciosAlterar);
                //altera o aluno no banco de dados
                exerciciosAlterar.alterar();
                jTableExercicios.repaint();
                atualizacaoFeita = true;
            }
        }
        if (atualizacaoFeita) {
            abaConsulta();
        }
    }//GEN-LAST:event_jButtonConfirmarExerciciosActionPerformed

    private void jButtonCancelarExerciciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarExerciciosActionPerformed
        abaConsulta();
    }//GEN-LAST:event_jButtonCancelarExerciciosActionPerformed

    private int flagAnterior; //Define qual botão foi clicado
    private Exercicios exercicios; //Endereça objetos criados
    //Flags para identificar que botão foi clicado anteriormente.
    private final int INSERIR = 1;
    private final int ALTERAR = 2;
    //Aluno para ser alterado
    private Exercicios exerciciosAlterar;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager entityManagerExercicios;
    private java.util.List<DataBase.Exercicios> exerciciosList;
    private javax.persistence.Query exerciciosQuery;
    private javax.swing.JButton jButtonAlterarExercicios;
    private javax.swing.JButton jButtonCancelarExercicios;
    private javax.swing.JButton jButtonConfirmarExercicios;
    private javax.swing.JButton jButtonExcluirExercicios;
    private javax.swing.JButton jButtonFecharExercicios;
    private javax.swing.JButton jButtonInserirExercicios;
    private javax.swing.JButton jButtonProcurarExercicios;
    private javax.swing.JComboBox jComboBoxProcurarExercicios;
    private javax.swing.JLabel jLabelDescricaoExercicios;
    private javax.swing.JLabel jLabelExerciciosNome;
    private javax.swing.JLabel jLabelProcurarExercicios;
    private javax.swing.JPanel jPanelAlterarExercicios;
    private javax.swing.JPanel jPanelConsultaExercicios;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPaneExercicios;
    private javax.swing.JTable jTableExercicios;
    private javax.swing.JTextArea jTextAreaDescricaoExercicios;
    private javax.swing.JTextField jTextFieldExerciciosNome;
    private javax.swing.JTextField jTextFieldProcurarExercicios;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
