/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DAO.AlunoJpaController;
import DAO.TreinadorJpaController;
import DataBase.Aluno;
import DataBase.Treinador;
import academiavisual.FormPrincipal;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import org.apache.commons.mail.EmailException;
import org.apache.commons.mail.SimpleEmail;

/**
 *
 * @author afnsoo
 */
public class JInternalFrameReportar extends javax.swing.JInternalFrame {

    /**
     * Creates new form JInternalFrameReportar
     */
    public JInternalFrameReportar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelMensagemReportar = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldAssuntoReportar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaMensagemReportar = new javax.swing.JTextArea();
        jButtonFecharReportar = new javax.swing.JButton();
        jButtonEnviarReportar = new javax.swing.JButton();

        setTitle("Reportar");

        jLabelMensagemReportar.setText("Assunto:");

        jLabel2.setText("Mensagem:");

        jTextAreaMensagemReportar.setColumns(20);
        jTextAreaMensagemReportar.setRows(5);
        jScrollPane1.setViewportView(jTextAreaMensagemReportar);

        jButtonFecharReportar.setText("Fechar");
        jButtonFecharReportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharReportarActionPerformed(evt);
            }
        });

        jButtonEnviarReportar.setText("Enviar");
        jButtonEnviarReportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnviarReportarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonEnviarReportar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonFecharReportar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabelMensagemReportar))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                            .addComponent(jTextFieldAssuntoReportar))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMensagemReportar)
                    .addComponent(jTextFieldAssuntoReportar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFecharReportar)
                    .addComponent(jButtonEnviarReportar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEnviarReportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnviarReportarActionPerformed
        try {
            enviarEmails enviar = new enviarEmails();
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("AcademiaVisualPU");
            AlunoJpaController alunoJpaController = new AlunoJpaController(emf);
            Aluno alunoLogin = (Aluno) alunoJpaController.findAluno(FormPrincipal.ALUNOID);
            if (alunoLogin != null) {
                enviar.setAutor(alunoLogin.getNome());
            }                        
            enviar.SendMail();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButtonEnviarReportarActionPerformed

    private void jButtonFecharReportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharReportarActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonFecharReportarActionPerformed

    private class enviarEmails {

        String autor;

        void setAutor(String autor) {
            this.autor = autor;
        }

        protected Void SendMail() {
            String msgA, subA;
            subA = "Enviado por treinador";
            SimpleEmail emailA = new SimpleEmail();
            emailA.setHostName("smtp.gmail.com");
            emailA.setAuthentication("projetoacademiavisual@gmail.com", "admin#123");
            emailA.setSmtpPort(465);
            emailA.setSSLOnConnect(true);

            try {
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("AcademiaVisualPU");
                AlunoJpaController alunoJpaController = new AlunoJpaController(emf);
                Aluno alunoLogin = (Aluno) alunoJpaController.findAluno(FormPrincipal.ALUNOID);
                if (alunoLogin != null) {
                    emailA.addBcc(alunoLogin.getEmail());
                    subA = ("(projetoAcademiaVisual)Nova Mensagem - Usuario: " + alunoLogin.getNome() + " Assunto: " + jTextFieldAssuntoReportar.getText());
                }                
                msgA = (jTextAreaMensagemReportar.getText());
                emailA.addBcc("projetoacademiavisual@gmail.com");
                emailA.setFrom("projetoacademiavisual@gmail.com", "Report system");
                emailA.setSubject(subA);
                emailA.setMsg(msgA);

                emailA.send();
                
                JOptionPane.showMessageDialog(null, "Mensagem enviada com sucesso !");
                jTextFieldAssuntoReportar.setText("");
                jTextAreaMensagemReportar.setText("");
                jTextFieldAssuntoReportar.grabFocus();
            } catch (EmailException ex) {
                JOptionPane.showMessageDialog(null, ex.toString());
                Logger.getLogger(JInternalFrameReportar.class.getName()).log(Level.SEVERE, null, ex);
            }
            return null;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEnviarReportar;
    private javax.swing.JButton jButtonFecharReportar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelMensagemReportar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaMensagemReportar;
    private javax.swing.JTextField jTextFieldAssuntoReportar;
    // End of variables declaration//GEN-END:variables
}
